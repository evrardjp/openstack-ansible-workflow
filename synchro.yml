- hosts: all
  vars:
    base_folder: "/Users/jean0000/openstack"
    # This is where your ~/.<something> is
    dotfiles_folder: "/Users/jean0000/dotfiles/"
    # Where the stuff happens: THE ACTION FOLDER!
    action_folder: "{{ base_folder }}/{{ folder }}"
    git_configuration:
      - { name: "user.name" , value: "Jean-Philippe Evrard" }
      - { name: "user.email" , value: "jean-philippe.evrard@rackspace.co.uk" }
      - { name: "gitreview.username" , value: "evrardjp" }
    irr:
      - apt_package_pinning
      - galera_client
      - galera_server
      - lxc_container_create
      - lxc_hosts
      - memcached_server
      - openstack_hosts
      - os_keystone
      - openstack_openrc
      - os_aodh
      - os_ceilometer
      - os_cinder
      - os_glance
      - os_heat
      - os_horizon
      - os_neutron
      - os_nova
      - os_swift
      - os_tempest
      - pip_install
      - pip_lock_down
      - rabbitmq_server
      - repo_build
      - repo_server
      - rsyslog_client
      - rsyslog_server
      - security
      - plugins
      - ironic
  tasks:
    - name: Updating apt cache
      apt:
        update_cache: yes
      tags:
        - apt
        - apt-cache
    - name: installing software
      apt:
        name: "{{ item }}"
      with_items:
        - git
        - screen
        - build-essential
        - python2.7
        - python-dev
        - git-core
        - libffi-dev
        - libssl-dev
        - python-pip
      tags:
        - apt
        - apt-install
    - name: Installing useful pip stuff
      pip:
        name: git-review
        state: present
    - name: creating folders
      file:
        state: directory
        path: "{{ item }}"
      with_items:
        - /etc/ansible/roles
        - /etc/ansible/plugins
        - /root/.config/openstack/
        - /etc/openstack_deploy/
      tags:
        - folders

    - name: synchro roles
      retries: 2
      synchronize:
        src: "{{ action_folder }}/{{ item }}"
        dest: "/etc/ansible/roles/"
      with_items:  "{{ irr }}"
      tags:
        - rolesync
        - role-sync
        - sync

    - name: synchro plugins
      retries: 2
      synchronize:
        src: "{{ action_folder }}/plugins"
        dest: /etc/ansible/

    - name: synchro main folder
      retries: 2
      synchronize:
        src: "{{ action_folder }}/openstack-ansible"
        dest: "/opt/"
      tags:
        - osasync
        - osa-sync
        - sync

    - name: synchro osa configuration
      copy:
        src: "{{ item }}"
        dest: "/etc/openstack_deploy/user_wariables.yml"
      with_first_found:
        - "{{ action_folder }}/user_wariables.yml"
        - "{{ base_folder }}/user_wariables.yml"
      tags:
        - sync
        - variables-sync
        - wariables

    - name: override role requirements for non local roles
      copy:
        src: "{{ item }}"
        dest: "/opt/openstack-ansible/ansible-role-requirements.yml"
      with_first_found:
        - "{{ action_folder }}/ansible-role-requirements-overwrite.yml"
        - "{{ base_folder }}/ansible-role-requirements-overwrite.yml"
      tags:
        - sync
        - requirements-sync

    - name: synchro openstack dotfiles
      copy:
        src: "{{ item }}"
        dest: "/root/.config/openstack/{{ item | basename}}"
      with_fileglob:
        - /Users/jean0000/.config/openstack/clouds*
      tags:
        - dotfiles
        - openstack-dotfiles

    - name: synchro dotfiles
      copy:
        src: "{{ item }}"
        dest: "/root/{{ item | basename }}"
      with_fileglob:
        - "{{ dotfiles_folder }}*"
      tags:
        - dotfiles

    - name: renaming folders that are named differently
      file:
        src: "{{item.src}}"
        dest: "{{item.dest}}"
        state: link
      with_items:
        - { src: "/etc/ansible/roles/security", dest: "/etc/ansible/roles/openstack-ansible-security" }
        - { src: "/etc/ansible/roles/ironic", dest: "/etc/ansible/roles/os_ironic" }
      tags:
        - sync
        - rolesync
        - role-sync

    - name: Configuring git on your remote node to continue development
      git_config:
        name: "{{ item.name }}"
        scope: "{{ item.scope | default('global') }}"
        value: "{{ item.value }}"
      with_items: "{{ git_configuration }}"
      tags:
        - git

    # - name: dropping screen script
    #   lineinfile:
    #     dest: /root/screen_start.sh
    #     state: present
    #     line: "{{ item.content }}"
    #     insertafter: "{{ item.insertafter | default(omit) }}"
    #     create: yes
    #   with_items:
    #     - { content: "cd /opt/openstack-ansible" }
    #     - { content: "scripts/gate-check-commit.sh", insertafter: "cd /opt/openstack-ansible" }
    # - name: Ensuring executable
    #   file:
    #     path: /root/screen_start.sh
    #     mode: 0750
